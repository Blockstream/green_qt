image: greenaddress/ci@sha256:c9c0bfc0eef0575d5822f9308ab16ff904a8bf99946c67938dd7637d70998220

stages:
  - lint
  - build
  - signartifacts
  - installer
  - installer_sign
  - deploy
  - publish

cpplint:
  tags:
    - ga
  stage: lint
  script:
    - virtualenv -p python3 .venv
    - source .venv/bin/activate
    - pip install cpplint
    - ./tools/lint/cpplint.sh

bionic_release:
  tags:
    - ga
  stage: build
  script:
    - curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain 1.64.0
    - source /root/.cargo/env
    - ./tools/buildcountly.sh /docker_bld_root/build-linux-gcc
    - ./tools/buildgreen.sh linux
    - mkdir build-linux-gcc
    - cp /docker_bld_root/*/green build-linux-gcc/
    - cp /docker_bld_root/*/BlockstreamGreen-x86_64.AppImage build-linux-gcc/
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 week
    when: always
    paths:
    - build-linux-gcc/green
    - build-linux-gcc/BlockstreamGreen-x86_64.AppImage

windows_release:
  tags:
    - ga
  stage: build
  script:
    - curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain 1.64.0
    - source /root/.cargo/env
    - rustup target add x86_64-pc-windows-gnu
    - ./tools/buildcountly.sh /docker_bld_root/build-mingw-w64 $(pwd)/cmake/mingw-w64-x86_64.cmake
    - ./tools/buildgreen.sh windows
    - mkdir -p build-mingw-w64/release
    - cp /docker_bld_root/*/release/green.exe "build-mingw-w64/release/Green.exe"
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 week
    when: always
    paths:
    - build-mingw-w64/release/Green.exe

osx_release:
  tags:
    - osx
  stage: build
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/buildcountly.sh $(pwd)/build-osx-clang
    - ./tools/buildgreen.sh osx
  cache:
    key: build-cache-osx
    paths:
    - build-osx-clang/gdk-*/*.h
    - build-osx-clang/gdk-*/*.hpp
    - build-osx-clang/gdk-*/build.done
    - build-osx-clang/gdk-*/boost
    - build-osx-clang/gdk-*/nlohmann
    - build-osx-clang/gdk-*/*.a
    - build-osx-clang/qt-release*
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 week
    when: always
    paths:
    - "build-osx-clang/Blockstream Green.app"

bionic_allsymbolsunstripped_manual:
  extends: bionic_release
  stage: build
  when: manual
  script:
    - ./tools/bionic_deps.sh
    - ./tools/buildgreen.sh linux allsymbolsunstripped

osx_allsymbolsunstripped_manual:
  extends: osx_release
  stage: build
  when: manual
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/buildgreen.sh osx allsymbolsunstripped

windows_allsymbolsunstripped_manual:
  extends: windows_release
  stage: build
  when: manual
  script:
    - ./tools/bionic_deps.sh
    - ./tools/buildgreen.sh windows allsymbolsunstripped

osx_sign:
  tags:
    - osxsigner
  only:
    - /^release_.*/
    - /^protected_.*/
  stage: signartifacts
  variables:
    GIT_STRATEGY: none
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 week
    when: always
    paths:
    - "build-osx-clang/Blockstream Green.dmg"
  needs:
    - osx_release
  script:
    - cd $CI_PROJECT_DIR
    - cd build-osx-clang
    - ../tools/osxsign.sh
    - ../tools/packdmg.sh
    - ../tools/osxstaple.sh

windows_sign:
  tags:
    - garelease
  only:
    - /^release_.*/
  stage: signartifacts
  variables:
    GIT_STRATEGY: none
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 week
    when: always
    paths:
    - build-mingw-w64/release/GreenSigned.exe
  needs:
    - windows_release
  script:
    - cd $CI_PROJECT_DIR/build-mingw-w64/release
    - /opt/process_release_windows

windows_installer:
  image:
    name: amake/innosetup
    entrypoint: [""]
  only:
    - /^release_.*/
  stage: installer
  tags:
    - ga
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 week
    when: always
    paths:
    - build-mingw-w64/release/GreenSetup.exe
  needs:
    - windows_sign
  script:
    - cd $CI_PROJECT_DIR/build-mingw-w64/release
    - mv GreenSigned.exe "Blockstream Green.exe"
    - ../../tools/buildwininstaller.sh

windows_installer_sign:
  tags:
    - garelease
  only:
    - /^release_.*/
  stage: installer_sign
  variables:
    GIT_STRATEGY: none
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 week
    when: always
    paths:
    - build-mingw-w64/release/GreenSigned.exe
  needs:
    - windows_installer
  script:
    - cd $CI_PROJECT_DIR/build-mingw-w64/release
    - mv GreenSetup.exe Green.exe
    - /opt/process_release_windows

package_release:
  tags:
    - garelease
  only:
    - /^release_.*/
  stage: deploy
  variables:
    GIT_STRATEGY: none
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 14 days
    paths:
    - $CI_PROJECT_DIR/green_qt_dist
    when: on_success
  script:
    - cd $CI_PROJECT_DIR
    - rm -fr green_qt_dist
    - mkdir green_qt_dist
    - mv build-mingw-w64/release/GreenSigned.exe "BlockstreamGreenSetup.exe"
    - zip -j green_qt_dist/BlockstreamGreen_Windows_x86_64.zip "BlockstreamGreenSetup.exe"
    - (cd build-osx-clang; zip -r ../green_qt_dist/BlockstreamGreen_MacOS_x86_64.zip "Blockstream Green.dmg")
    - chmod +x build-linux-gcc/green
    - tar czf green_qt_dist/BlockstreamGreen_Linux_x86_64.tar.gz -C build-linux-gcc green
    - cp build-linux-gcc/BlockstreamGreen-x86_64.AppImage green_qt_dist
    - chmod +x green_qt_dist/BlockstreamGreen-x86_64.AppImage
    - cd green_qt_dist
    - /opt/process_release
  needs:
    - bionic_release
    - osx_sign
    - windows_installer_sign

publish_release:
  tags:
    - ga
  only:
    - /^release_.*/
  stage: publish
  when: manual
  image: glregistry.blockstream.io/blockstream/p/gcloud-docker:tf0.15.4
  script:
    - cd green_qt_dist
    - ../tools/publish.sh
  needs:
    - package_release
